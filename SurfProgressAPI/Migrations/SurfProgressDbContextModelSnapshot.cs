// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurfProgressAPI.Data;

namespace SurfProgressAPI.Migrations
{
    [DbContext(typeof(SurfProgressDbContext))]
    partial class SurfProgressDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SurfProgressAPI.Shared.Models.SurfSession", b =>
                {
                    b.Property<int>("SurfSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("SurfboardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimeOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WaveCount")
                        .HasColumnType("int");

                    b.Property<string>("WaveDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WaveHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WindDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WindSpeed")
                        .HasColumnType("int");

                    b.HasKey("SurfSessionId");

                    b.HasIndex("SurfboardId");

                    b.ToTable("SurfSessions");
                });

            modelBuilder.Entity("SurfProgressAPI.Shared.Models.Surfboard", b =>
                {
                    b.Property<string>("SurfboardId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DisplayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FinSetup")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Shaper")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Thickness")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Width")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SurfboardId");

                    b.ToTable("Surfboards");
                });

            modelBuilder.Entity("SurfProgressAPI.Shared.Models.SurfSession", b =>
                {
                    b.HasOne("SurfProgressAPI.Shared.Models.Surfboard", "Surfboard")
                        .WithMany()
                        .HasForeignKey("SurfboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Surfboard");
                });
#pragma warning restore 612, 618
        }
    }
}
